import pygame
from pygame import mixer
import random
import os

pygame.init()
pygame.font.init()
mixer.init()

#Screen Height and Width
SCREEN_HEIGHT = 500
SCREEN_WIDTH = 800

#Text Font
textfont = pygame.font.SysFont("Arial",16)
textfont_small = pygame.font.SysFont("Arial",12)


#Screen initialization and title and logo
screen = pygame.display.set_mode((SCREEN_WIDTH, SCREEN_HEIGHT))
pygame.display.set_caption("Muzic Player")
icon = pygame.image.load("Images/Play.png")
pygame.display.set_icon(icon)

#Loading Buttons
arrow_leftt = pygame.image.load("Images/Arrow_left.png").convert_alpha()
arrow_right = pygame.image.load("Images/Arrow_right.png").convert_alpha()
arrow_left = pygame.transform.rotate(arrow_leftt,180)
pause_buttonn = pygame.image.load("Images/Pause_button.png").convert_alpha()
vol_down = pygame.image.load("Images/Volume_down.png").convert_alpha()
vol_up = pygame.image.load("Images/Volume_up.png").convert_alpha()
suffle = pygame.image.load("Images/Shuffle.png").convert_alpha()

#Loading muzic from folder
muzic_prep = os.listdir("Muzic")
muzic_prep.insert(0, "Blank")
muzic_list = muzic_prep

#Muzic load and play
def play(Muzic):
    mz_load = ("Muzic/" + Muzic)
    mixer.music.load(mz_load)
    mixer.music.play(-1)
    now_playing_prep = mz_load.strip("Muzic")
    now_playing = now_playing_prep.strip(".mp3")
    print(f"Now Playing", now_playing)
    return now_playing


First_song = play(muzic_list[1])
print(First_song)


#Creating buttons

class Button():
    def __init__(self, x, y, image, scale):
        width = image.get_width()
        height = image.get_height()
        self.image = pygame.transform.scale(image, (int(width * scale), int(height * scale)))
        self.rect = self.image.get_rect()
        self.rect.topleft = x, y
        self.clicked = False

    def draw(self):
        action = False
        #draw buttons on screen
        screen.blit(self.image, (self.rect.x, self.rect.y))
        #get maus position
        pos = pygame.mouse.get_pos()
        #Chec mouseover and clicked conditions
        if self.rect.collidepoint(pos):
            if pygame.mouse.get_pressed()[0] == 1 and self.clicked == False:
                self.clicked = True
                action = True
        if pygame.mouse.get_pressed()[0] == 0:
            self.clicked = False
            action = False
        return action


#Create button instances
left_button = Button(225, 202.5, arrow_left, 0.1)
right_Button = Button(520, 200, arrow_right, 0.1)
pause_button = Button(374, 200, pause_buttonn, 0.1)
Volume_down = Button(310, 215, vol_down, 0.05)
Volume_up = Button(470, 215, vol_up, 0.05)
Shuffle_Button = Button(387, 268, suffle, 0.05)

#Colors
Gray = 64, 64, 64
white = 255, 255, 255

#Main loop
def main(First_song):
    run = True
    FPS = 60
    Clock = pygame.time.Clock()

    #Creating some variabels
    music_playing = False
    currently_playing = 1
    Songs_count = len(muzic_list) - 1
    now_playing = First_song
    Pause = False
    Left_button = False
    Right_button = False
    Vol_up = False
    Vol_Down = False

    #seting the initial volume
    volume = 0.5
    mixer.music.set_volume(volume)
    mixer.music.pause()

    while run:
        Clock.tick(FPS)
        screen.fill(Gray)

        #Event Cheker
        for event in pygame.event.get():
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_SPACE:
                    Pause = True
                elif event.key == pygame.K_LEFT:
                    Left_button = True
                elif event.key == pygame.K_RIGHT:
                    Right_button = True
                elif event.key == pygame.K_UP:
                    Vol_up = True
                elif event.key == pygame.K_DOWN:
                    Vol_Down = True
                elif event.key == pygame.K_ESCAPE:
                    run = False
            if event.type == pygame.QUIT:
                run = False

        #draw buttons

        #Left Button
        if left_button.draw() or Left_button:
            if currently_playing == 1:
                print("This is the last Song , Please go to the next one !")
                continue
            elif currently_playing > 1:
                now_playing = play(muzic_list[currently_playing - 1])
                currently_playing = currently_playing - 1

        #Right button
        if right_Button.draw() or Right_button:
            if Songs_count == currently_playing:
                print("This is the last Song , Please go back !")
                continue
            elif currently_playing < Songs_count and not currently_playing == Songs_count:
                now_playing = play(muzic_list[currently_playing + 1])
                currently_playing = currently_playing + 1


        #Pause Button
        if pause_button.draw() or Pause:
            if music_playing == True:

                mixer.music.pause()
                music_playing = False
                print("Music Paused ...")
            elif music_playing == False:
                mixer.music.unpause()
                music_playing = True
                print("Music resumed !")

        #Volume down
        if Volume_down.draw() or Vol_Down:
            if volume <= 0:
                print("Volume is at the lowest level")
                continue
            else:
                volume = volume - 0.1
                mixer.music.set_volume(volume)
                print("volume decreased !")
                print("Curent music volume is", '{:02.2f}'.format(volume))

        #Volume Up
        if Volume_up.draw() or Vol_up:
            if volume >= 1:
                print("Volume is at the max level!")
                continue
            else:
                volume = volume + 0.1
                mixer.music.set_volume(volume)
                print("volume increased !")
                print("Curent music volume is", '{:02.2f}'.format(volume))

        #Shuffle button
        if Shuffle_Button.draw():
            Shuffle_song = random.randint(1,Songs_count)
            now_playing = play(muzic_list[Shuffle_song])
            print("Random Song Played!")

        #Volume show
        if volume >=1:
            volume_render = f"Current Volume : Max"
        elif volume <= 0:
            volume_render = f"Current Volume : Min"
        else:
            volume_render = f"Current Volume : {'{:02.1f}'.format(volume)}"
        Volume_show = textfont.render(volume_render, 1, white)
        screen.blit(Volume_show, (640, 475))

        #Show curentli playing
        now_playing_prep = now_playing.strip("/")
        Show_curentli_playing_prep = f"Now Playing : {now_playing_prep}"
        Show_curentli_playing = textfont.render(Show_curentli_playing_prep, 1, white)
        screen.blit(Show_curentli_playing, (10, 475))

        #show playing or paused
        if music_playing == True:
            Paused_or_playing_prep = "Playing"
        elif music_playing == False:
            Paused_or_playing_prep = "Paused"
        Paused_or_playing = textfont_small.render(Paused_or_playing_prep, 1, white)
        screen.blit(Paused_or_playing, (5,5))

        #Reseting some variables
        Pause = False
        Left_button = False
        Right_button = False
        Vol_up = False
        Vol_Down = False

        pygame.display.update()


#Calling the main loop
main(First_song)
pygame.quit()
